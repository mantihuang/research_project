fevd.exports <- apply(FEVD.posterior[5,,,], 1:2, mean)
fevd.exports <- rbind(rep(0, h + 1), apply(fevd.realTWI, 2, cumsum))
#
# colors <- c("deepskyblue1","deepskyblue2","deepskyblue","deepskyblue3","deepskyblue4","dodgerblue",
#             "maroon1","maroon","maroon2","magenta","maroon3","maroon4")
# Set up the layout for two plots side by side
par(mfrow = c(1, 2), mar = rep(4, 4), cex.axis = 1, cex.lab = 0.8)
# Plotting fevd-au-gdp-k1
plot(hh, fevd.au.rgdp[1,], type = "n", ylim = c(0, 100), axes = FALSE, xlab = "", ylab = "")
# Define labels vector for x-axis (axis 1)
x_axis_labels <- rep("", length(hh))  # Start with a vector of empty strings of the same length as 'hh'
x_axis_labels[c(2, 5, 9)] <- c("1 quarter", "1 year", "2 years")  # Place your labels at desired positions
# Replace the labels in your axis() calls with the revised labels vector
axis(1, hh, x_axis_labels)
# axis(1, hh, c("", "1 quarter", "", "", "1 year", "", "", "", "2 years"))
axis(2, c(0, 50, 100), c("", "FEVD[au.rgdp]", ""))
for (n in 1:N) {
polygon(c(hh, (h + 1):1), c(fevd.au.rgdp[n, hh], fevd.au.rgdp[n + 1, (h + 1):1]), col = colors[n], border = colors[n])
}
# axis(4, (0.5 * (fevd.au.rgdp[1:n, 9] + fevd.au.rgdp[2:n+1, 9]))[c(1, 3, 10)], c("Government spending shock", "", "au.mps"))
axis(4, (0.5 * (fevd.au.rgdp[1:n, 9] + fevd.au.rgdp[2:n+1, 9])))
# Plotting fevd-au-p-k1
plot(hh, fevd.realTWI[1,], type = "n", ylim = c(0, 100), axes = FALSE, xlab = "", ylab = "")
axis(1, hh, x_axis_labels)
axis(2, c(0, 50, 100), c("", "FEVD[realTWI]", ""))
for (n in 1:N) {
polygon(c(hh, (h + 1):1), c(fevd.realTWI[n, hh], fevd.realTWI[n + 1, (h + 1):1]), col = colors[n], border = colors[n])
}
# axis(4, (0.5 * (fevd.realTWI[1:n, 9] + fevd.realTWI[2:n+1, 9]))[c(3, 10)],)
axis(4, (0.5 * (fevd.realTWI[1:n, 9] + fevd.realTWI[2:n+1, 9])))
T             = dim(Y)[1]
H         = diag(T)
sdiag(H,-1) =  -1
HH        = 2*diag(T)
sdiag(HH,-1) =  -1
sdiag(HH,1) =  -1
priors        = list(
h0.v    = 1,
sigmav.s= 1,
sigmav.nu= 1,
h0.v    = 1,
h0.m    = 0 ,
HH      = HH
)
sv1 = SVcommon.Gibbs.iteration(S,Y,X,priors)
A.posterior= sv1$A
B.posterior       = array(NA,c(N,N,S))
B1.posterior = array(NA,c(N,(1+N*p),S))
for (s in 1:S){
cholSigma.s     = chol(sv1$Sigma[,,s])
B.posterior[,,s]= t(cholSigma.s)
B1.posterior[,,s] =  B.posterior[,,s]%*%t(A.posterior[,,s])
}
sv_posterior = list(A.posterior = A.posterior, B.posterior = B.posterior, Sigma.posterior = sv1$Sigma,B1.posterior = B1.posterior)
SV_Narrative_Restriction = NarrativeSignRestrictions(sign.restrictions = c(1,1,0,0,0,1,1,1), sv_posterior,c(16,50,80,156,204),Y,X)
A.posterior = SV_Narrative_Restriction$A.draws
B.posterior = SV_Narrative_Restriction$B.draws
# Calculate the means
Ahcheck_mean <- head(round(apply(A.posterior, 1:2, mean),4))
# Calculate the standard deviations
Ahcheck_sd <- head(round(apply(A.posterior, 1:2, sd),4))
Ahcheck_mean
Ahcheck_sd
# Calculate the means
Bhcheck_mean <- head(round(apply(B.posterior, 1:2, mean),4))
Bhcheck_sd   <- head(round(apply(B.posterior, 1:2, sd),4))
# Calculate the standard deviations
Bhcheck_mean
Bhcheck_sd
par(mfrow=c(2,2), mar=c(4,4,2,2))
plot.ts(A.posterior[3,,][8,], xlab = "Simulation times S", ylab = expression(A[38]), col = "#CC66CC")
hist(A.posterior[3,,][8,], xlab = expression(A[38]), col = "#CC66CC", main = '')
plot.ts(B.posterior[3,,][8,], xlab = "Simulation times S", ylab = expression(B[38]), col = "lightblue")
hist(B.posterior[3,,][8,], xlab = expression(A[38]), col = "lightblue", main = '')
h = 20
IRF.posterior     = array(NA,c(N,N,h+1,S))
IRF.inf.posterior = array(NA,c(N,N,S))
FEVD.posterior    = array(NA,c(N,N,h+1,S))
J                 = cbind(diag(N),matrix(0,N,N*(p-1)))
for (s in 1:S){
A.bold          = rbind(t(A.posterior[2:(1+N*p),,s]),cbind(diag(N*(p-1)),matrix(0,N*(p-1),N)))
IRF.inf.posterior[,,s]          = J %*% solve(diag(N*p)-A.bold) %*% t(J) %*% B.posterior[,,s]
A.bold.power    = A.bold
for (i in 1:(h+1)){
if (i==1){
IRF.posterior[,,i,s]        = B.posterior[,,s]
} else {
IRF.posterior[,,i,s]        = J %*% A.bold.power %*% t(J) %*% B.posterior[,,s]
A.bold.power                = A.bold.power %*% A.bold
}
for (n in 1:N){
for (nn in 1:N){
FEVD.posterior[n,nn,i,s]  = sum(IRF.posterior[n,nn,1:i,s]^2)
}
}
FEVD.posterior[,,i,s]         = diag(1/apply(FEVD.posterior[,,i,s],1,sum))%*%FEVD.posterior[,,i,s]
}
}
FEVD.posterior    = 100*FEVD.posterior
# save(IRF.posterior,IRF.inf.posterior, FEVD.posterior, file="irf-fevd-k002.RData")
save(IRF.posterior,IRF.inf.posterior, FEVD.posterior, file="irf-fevd-k1_narrative.RData")
load("irf-fevd-k1_narrative.RData")
IRFs.k1           = apply(IRF.posterior[,1,,],1:2,mean)
######1st shock is government  spending shock
IRFs.inf.k1       = apply(IRF.inf.posterior[,1,],1,mean)
rownames(IRFs.k1) = colnames(Y)
IRFs.k1.hdi    = apply(IRF.posterior[,1,,],1:2,hdi, credMass=0.68)
hh          = 1:h+1
par(mfrow=c(3,3), mar=c(4,4.5,2,2),cex.axis=1.5, cex.lab=1.5)
# par(mfrow=c(4,2), mar=c(3,3,2,2),cex.axis=1.5, cex.lab=1.5)
for (n in 1:N){
ylims     = range(IRFs.k1[n,hh],IRFs.k1.hdi[,n,hh])
plot(hh,IRFs.k1[n,hh], type="l", ylim=ylims, axes=FALSE, xlab="", ylab=rownames(IRFs.k1)[n])
# if (n==N-1 | n==N){
#   axis(1,c(1,2,5,9),c("","1 quarter","1 year","2 years"))
# } else {
#   axis(1,c(1,2,5,9),c("","","",""))
# }
axis(1, at = c(12), labels = c("2.5year"))
axis(2,c(ylims[1],0,ylims[2]),round(c(ylims[1],0,ylims[2]),3))
polygon(c(hh,(h+1):1), c(IRFs.k1.hdi[1,n,hh],IRFs.k1.hdi[2,n,(h+1):1]), col=mcxs1.shade1,border=mcxs1.shade1)
abline(h=0)
lines(hh, IRFs.k1[n,hh],lwd=2,col=mcxs1)
}
A.posterior = SV_Narrative_Restriction$A.draws
B.posterior = SV_Narrative_Restriction$B.draws
A.posterior
dim(A.posterior)
A.posterior[,,800]
A.posterior[,,]
A.posterior[49:800]
A.posterior[,,49:800]
A.posterior = SV_Narrative_Restriction$A.draws[,,49:800]
B.posterior = SV_Narrative_Restriction$B.draws[,,48:800]
The mean and standard deviations for matrix A are reported below:
# Calculate the means
Ahcheck_mean <- head(round(apply(A.posterior, 1:2, mean),4))
# Calculate the standard deviations
Ahcheck_sd <- head(round(apply(A.posterior, 1:2, sd),4))
Ahcheck_mean
Ahcheck_sd
# Calculate the means
Bhcheck_mean <- head(round(apply(B.posterior, 1:2, mean),4))
Bhcheck_sd   <- head(round(apply(B.posterior, 1:2, sd),4))
# Calculate the standard deviations
Bhcheck_mean
Bhcheck_sd
par(mfrow=c(2,2), mar=c(4,4,2,2))
plot.ts(A.posterior[3,,][8,], xlab = "Simulation times S", ylab = expression(A[38]), col = "#CC66CC")
hist(A.posterior[3,,][8,], xlab = expression(A[38]), col = "#CC66CC", main = '')
plot.ts(B.posterior[3,,][8,], xlab = "Simulation times S", ylab = expression(B[38]), col = "lightblue")
hist(B.posterior[3,,][8,], xlab = expression(A[38]), col = "lightblue", main = '')
par(mfrow=c(2,2), mar=c(4,4,2,2))
plot.ts(A.posterior[3,,][8,], xlab = "Simulation times S", ylab = expression(A[38]), col = "#CC66CC")
hist(A.posterior[3,,][8,], xlab = expression(A[38]), col = "#CC66CC", main = '')
plot.ts(B.posterior[3,,][8,], xlab = "Simulation times S", ylab = expression(B[38]), col = "lightblue")
hist(B.posterior[3,,][8,], xlab = expression(A[38]), col = "lightblue", main = '')
B0.draws = SV_Narrative_Restriction$B0.draws[,,49:800]
B1.draws = SV_Narrative_Restriction$B1.draws[,,49:800]
S.check <- array(NA,c(N,N,S))
for (s in 1:S){
# convert Bo into Sigma
A.check[,,s] <- t(B1.draws[,,s]) %*% B0.draws[,,s]
}
for (s in 1:750){
# convert Bo into Sigma
A.check[,,s] <- t(B1.draws[,,s]) %*% B0.draws[,,s]
}
dim(B0.draws)
for (s in 1:752){
# convert Bo into Sigma
A.check[,,s] <- t(B1.draws[,,s]) %*% B0.draws[,,s]
}
dim(B1.draws)
# convert Bo into Sigma
A.check[,,s] <- t(B1.draws[,,s]) %*% B0.draws[,,s]
for (s in 1:752){
# convert Bo into Sigma
A.check[,,s] <- t(B1.draws[,,s]) %*% B0.draws[,,s]
}
B0.draws = SV_Narrative_Restriction$B0.draws
B1.draws = SV_Narrative_Restriction$B1.draws
S.check <- array(NA,c(N,N,S))
for (s in 1:752){
# convert Bo into Sigma
A.check[,,s] <- t(B1.draws[,,s]) %*% B0.draws[,,s]
}
Acheck=round(apply(A.check,1:2,mean),4)
Scheck =round(apply(S.check,1:2,mean),4)
S
for (s in 1:S){
# convert Bo into Sigma
A.check[,,s] <- t(B1.draws[,,s]) %*% B0.draws[,,s]
}
Acheck=round(apply(A.check,1:2,mean),4)
Scheck =round(apply(S.check,1:2,mean),4)
S.check[,,s] <- B1.draws[,,s] %*% t(B1.draws[,,s])
for (s in 1:S){
S.check[,,s] <- B1.draws[,,s] %*% t(B1.draws[,,s])
}
Scheck =round(apply(S.check,1:2,mean),4)
Scheck
sv.mean = apply(sqrt(sv1$H.sv),1,mean)
sv.mean = apply(sqrt(sv1$H),1,mean)
plot(x=dates[5:132], y=sv.mean, type="l",lwd=2, col="#3F007D",xlab="",bty="n",ylab="",ylim=c(0,100),main="Stochastic Volatility Mean")
plot(ts(sv.mean))
plot(sv.mean)
sv.mean
sv1$H
plot(sv1$H)
plot(ts(sv1$H))
sv.mean = apply(sv1$H,1,mean)
view(sv.mean)
view(df)
plot(sv.mean)
plot(ts(sv.mean))
plot(ts(sv.mean))
x.date <- inde(Y)
x.date <- index(Y)
x.date
x.date <- index(df)
x.date
x.date <- index(df)[6,]
x.date <- index(df[6,]
)
plot(x=x.date, y=sv.mean, type="l", col=mcxs1, ylim =c(0,7), bty="n", lwd = 2,
ylab = "h",xlab = "", main = "Conditional volatility since COVID")
x.date <- index(df[7,])
plot(x=x.date, y=sv.mean, type="l", col=mcxs1, ylim =c(0,7), bty="n", lwd = 2,
ylab = "h",xlab = "", main = "Conditional volatility since COVID")
length(x.date)
x.date <- index(df[7:])
x.date <- index(df[,7:])
x.date <- index(df)
x.date
x.date[7:]
x.date[7,]
x.date[7]
x.date(7:)
x.date[7:]
x.date(7:211)
x.date[7:211]
x.date[6:211]
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l", col=mcxs1, ylim =c(0,7), bty="n", lwd = 2,
ylab = "h",xlab = "", main = "Conditional volatility since COVID")
sv.mean = apply(sv1$sigma2,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l", col=mcxs1, ylim =c(0,7), bty="n", lwd = 2,
ylab = "h",xlab = "", main = "Conditional volatility since COVID")
plot(sv.mena)
plot(sv.mean)
sv.mean = apply(sv1$H,1,mean)
plot(sv.mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l", col=mcxs1, ylim =c(0,7), bty="n", lwd = 2,
ylab = "h",xlab = "", main = "Conditional volatility since COVID")
plot(x=x.date, y=sv.mean, type="l", col=mcxs1, ylim =c(0,9), bty="n", lwd = 2,
ylab = "h",xlab = "", main = "Conditional volatility since COVID")
plot(x=x.date, y=sv.mean, type="l", col=mcxs1, ylim =c(2,9), bty="n", lwd = 2,
ylab = "h",xlab = "", main = "Conditional volatility since COVID")
sv.mean = apply(sv1$H,1,mean)
plot(sv.mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l", col=mcxs1, ylim =c(2,9), bty="n", lwd = 2,
ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("1998-07-01"), col = "grey25", lty = "dotted", lwd = 1.25)
abline(v=as.Date("2009-07-01"), col = "grey25", lty = "dotted", lwd = 1.25)
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text("AFC",x=as.Date("1997-01-01"),y=95,col="black")
text("GFC",x=as.Date("2008-01-01"),y=95,col="black")
text("COVID",x=as.Date("2018-04-01"),y=95,col="black")
sv.mean = apply(sv1$H,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l", col=mcxs1, ylim =c(2,9), bty="n", lwd = 2,
ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("1998-07-01"), col = "grey25", lty = "dotted", lwd = 1.25)
abline(v=as.Date("2009-07-01"), col = "grey25", lty = "dotted", lwd = 1.25)
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text("AFC",x=as.Date("1997-01-01"),y=95,col="black")
text("GFC",x=as.Date("2008-01-01"),y=95,col="black")
text("COVID",x=as.Date("2018-04-01"),y=95,col="black")
text("AFC",x=as.Date("1997-01-01"),y=95,col="blue")
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l", col=mcxs1, ylim =c(2,9), bty="n", lwd = 2,
ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("1998-07-01"), col = "grey25", lty = "dotted", lwd = 1.25)
abline(v=as.Date("2009-07-01"), col = "grey25", lty = "dotted", lwd = 1.25)
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text("AFC",x=as.Date("1997-01-01"),y=95,col="blue")
text("GFC",x=as.Date("2008-01-01"),y=95,col="black")
text("COVID",x=as.Date("2018-04-01"),y=95,col="black")
sv.mean = apply(sv1$H,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l", col=mcxs1, ylim =c(2,9), bty="n", lwd = 2,
ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("1998-07-01"), col = "grey25", lty = "dotted", lwd = 1.25)
abline(v=as.Date("2009-07-01"), col = "grey25", lty = "dotted", lwd = 1.25)
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text("AFC",x=as.Date("1997-01-01"),y=95,col="blue")
text("GFC",x=as.Date("2008-01-01"),y=95,col="black")
text("COVID",x=as.Date("2018-04-01"),y=95,col="black")
view(x.date)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l", col=mcxs1, ylim =c(2,9), bty="n", lwd = 2,
ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("1998-07-01"), col = "grey25", lty = "dotted", lwd = 1.25)
abline(v=as.Date("2009-07-01"), col = "grey25", lty = "dotted", lwd = 1.25)
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text("AFC",x=as.Date("1997-01-01"),y=95,col="blue")
text("GFC",x=as.Date("2008-01-01"),y=95,col="black")
text("COVID",x=as.Date("2018-04-01"),y=95,col="black")
plot(x=x.date, y=sv.mean, type="l", col=mcxs1, ylim =c(2,9), bty="n", lwd = 2,
ylab = "h",xlab = "", main = "Conditional Volatility")
plot(x=x.date, y=sv.mean, type="l")
plot(x=x.date, y=sv.mean, type="l",col=mcxs1)
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
sv.mean = apply(sv1$H,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("1998-07-01"), col = "grey25", lty = "dotted", lwd = 1.25)
abline(v=as.Date("2009-07-01"), col = "grey25", lty = "dotted", lwd = 1.25)
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text("AFC",x=as.Date("1997-01-01"),y=95,col="black")
text("GFC",x=as.Date("2008-01-01"),y=95,col="black")
text("COVID",x=as.Date("2018-04-01"),y=95,col="black")
sv.mean = apply(sv1$H,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("1998-07-01"), col = "grey25", lty = "dotted", lwd = 1.25)
abline(v=as.Date("2009-07-01"), col = "grey25", lty = "dotted", lwd = 1.25)
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text("COVID",x=as.Date("2018-04-01"),y=95,col="black")
sv.mean = apply(sv1$H,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("1998-07-01"), col = "grey25", lty = "dotted", lwd = 1.25)
abline(v=as.Date("2009-07-01"), col = "grey25", lty = "dotted", lwd = 1.25)
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text("COVID",x=as.Date("2018-04-01"),y=95,col="black")
sv.mean = apply(sv1$H,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text("COVID",x=as.Date("2018-04-01"),y=95,col="black")
sv.mean = apply(sv1$H,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text(x = as.Date("2020-04-01"), y = max(sv.mean), labels = "COVID Start", pos = 4)
sv.mean = apply(sv1$H,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text(x = as.Date("2020-04-01"), y = max(sv.mean), labels = "COVID Start", pos = 4)
sv.mean = apply(sv1$H,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text(x = as.Date("2018-04-01"), y = max(sv.mean), labels = "COVID Start", pos = 4)
sv.mean = apply(sv1$H,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text(x = as.Date("2018-04-01"), y = max(sv.mean), labels = "COVID", pos = 2)
sv.mean = apply(sv1$H,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text(x = as.Date("2019-04-01"), y = max(sv.mean), labels = "COVID", pos = 2)
sv.mean = apply(sv1$H,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text(x = as.Date("2019-04-01"), y = max(sv.mean), labels = "COVID", pos = 2)
par(mfrow=c(2,2), mar=c(4,4,2,2))
plot.ts(A.posterior[3,,][8,], xlab = "Simulation times S", ylab = expression(A[38]), col = "#CC66CC")
hist(A.posterior[3,,][8,], xlab = expression(A[38]), col = "#CC66CC", main = '')
plot.ts(B.posterior[3,,][8,], xlab = "Simulation times S", ylab = expression(B[38]), col = "lightblue")
hist(B.posterior[3,,][8,], xlab = expression(A[38]), col = "lightblue", main = '')
h = 20
IRF.posterior     = array(NA,c(N,N,h+1,S))
IRF.inf.posterior = array(NA,c(N,N,S))
FEVD.posterior    = array(NA,c(N,N,h+1,S))
J                 = cbind(diag(N),matrix(0,N,N*(p-1)))
for (s in 1:S){
A.bold          = rbind(t(A.posterior[2:(1+N*p),,s]),cbind(diag(N*(p-1)),matrix(0,N*(p-1),N)))
IRF.inf.posterior[,,s]          = J %*% solve(diag(N*p)-A.bold) %*% t(J) %*% B.posterior[,,s]
A.bold.power    = A.bold
for (i in 1:(h+1)){
if (i==1){
IRF.posterior[,,i,s]        = B.posterior[,,s]
} else {
IRF.posterior[,,i,s]        = J %*% A.bold.power %*% t(J) %*% B.posterior[,,s]
A.bold.power                = A.bold.power %*% A.bold
}
for (n in 1:N){
for (nn in 1:N){
FEVD.posterior[n,nn,i,s]  = sum(IRF.posterior[n,nn,1:i,s]^2)
}
}
FEVD.posterior[,,i,s]         = diag(1/apply(FEVD.posterior[,,i,s],1,sum))%*%FEVD.posterior[,,i,s]
}
}
dim(A.posterior)
A.posterior = SV_Narrative_Restriction$A.draws[,,51:800]
B.posterior = SV_Narrative_Restriction$B.draws[,,51:800]
dim(A.posterior)
# Calculate the means
Ahcheck_mean <- head(round(apply(A.posterior, 1:2, mean),4))
# Calculate the standard deviations
Ahcheck_sd <- head(round(apply(A.posterior, 1:2, sd),4))
h = 20
S = 750
IRF.posterior     = array(NA,c(N,N,h+1,S))
IRF.inf.posterior = array(NA,c(N,N,S))
FEVD.posterior    = array(NA,c(N,N,h+1,S))
J                 = cbind(diag(N),matrix(0,N,N*(p-1)))
for (s in 1:S){
A.bold          = rbind(t(A.posterior[2:(1+N*p),,s]),cbind(diag(N*(p-1)),matrix(0,N*(p-1),N)))
IRF.inf.posterior[,,s]          = J %*% solve(diag(N*p)-A.bold) %*% t(J) %*% B.posterior[,,s]
A.bold.power    = A.bold
for (i in 1:(h+1)){
if (i==1){
IRF.posterior[,,i,s]        = B.posterior[,,s]
} else {
IRF.posterior[,,i,s]        = J %*% A.bold.power %*% t(J) %*% B.posterior[,,s]
A.bold.power                = A.bold.power %*% A.bold
}
for (n in 1:N){
for (nn in 1:N){
FEVD.posterior[n,nn,i,s]  = sum(IRF.posterior[n,nn,1:i,s]^2)
}
}
FEVD.posterior[,,i,s]         = diag(1/apply(FEVD.posterior[,,i,s],1,sum))%*%FEVD.posterior[,,i,s]
}
}
FEVD.posterior    = 100*FEVD.posterior
# save(IRF.posterior,IRF.inf.posterior, FEVD.posterior, file="irf-fevd-k002.RData")
save(IRF.posterior,IRF.inf.posterior, FEVD.posterior, file="irf-fevd-k1_narrative.RData")
load("irf-fevd-k1_narrative.RData")
IRFs.k1           = apply(IRF.posterior[,1,,],1:2,mean)
######1st shock is government  spending shock
IRFs.inf.k1       = apply(IRF.inf.posterior[,1,],1,mean)
rownames(IRFs.k1) = colnames(Y)
IRFs.k1.hdi    = apply(IRF.posterior[,1,,],1:2,hdi, credMass=0.68)
hh          = 1:h+1
par(mfrow=c(3,3), mar=c(4,4.5,2,2),cex.axis=1.5, cex.lab=1.5)
# par(mfrow=c(4,2), mar=c(3,3,2,2),cex.axis=1.5, cex.lab=1.5)
for (n in 1:N){
ylims     = range(IRFs.k1[n,hh],IRFs.k1.hdi[,n,hh])
plot(hh,IRFs.k1[n,hh], type="l", ylim=ylims, axes=FALSE, xlab="", ylab=rownames(IRFs.k1)[n])
# if (n==N-1 | n==N){
#   axis(1,c(1,2,5,9),c("","1 quarter","1 year","2 years"))
# } else {
#   axis(1,c(1,2,5,9),c("","","",""))
# }
axis(1, at = c(12), labels = c("2.5year"))
axis(2,c(ylims[1],0,ylims[2]),round(c(ylims[1],0,ylims[2]),3))
polygon(c(hh,(h+1):1), c(IRFs.k1.hdi[1,n,hh],IRFs.k1.hdi[2,n,(h+1):1]), col=mcxs1.shade1,border=mcxs1.shade1)
abline(h=0)
lines(hh, IRFs.k1[n,hh],lwd=2,col=mcxs1)
}
sv.mean = apply(sv1$sigma.v2,1,mean)
sv.mean = apply(sv1$sigma,1,mean)
sv.mean = apply(sv1$h,1,mean)
sv.mean = apply(sv1$H,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text(x = as.Date("2019-04-01"), y = max(sv.mean), labels = "COVID", pos = 2)
sv.mean = apply(sv1$Sigma,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text(x = as.Date("2019-04-01"), y = max(sv.mean), labels = "COVID", pos = 2)
sv.mean = apply(sv1$Sigma,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
sv.mean = apply(sv1$Sigma,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
sv.mean = apply(sv1$Sigma,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
sv.mean = apply(sv1$H,1,mean)
x.date <- index(df)
x.date <- x.date[6:211]
plot(x=x.date, y=sv.mean, type="l",col=mcxs1,lwd = 2, ylab = "h",xlab = "", main = "Conditional Volatility")
abline(v=as.Date("2020-04-01"), col = "grey25", lty = "dotted", lwd = 1.25)
text(x = as.Date("2019-04-01"), y = max(sv.mean), labels = "COVID", pos = 2)
